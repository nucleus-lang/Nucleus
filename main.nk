# fn calculate_fib(n: i32): i32 {
# 	if compare.is_less_than_or_equals(n, 1) {
# 		return load n;
# 	};
#
# 	pure r1: i32 = n - 1;
# 	pure r2: i32 = n - 2;
#
# 	pure i: i32 = calculate_fib(r1);
# 	pure i2: i32 = calculate_fib(r2);
#
# 	return i + i2;
# }

# todo "Enhancement: Polish atomic functions:";
# todo "\tTry to find a way to make atomic functions recursive.";
# todo "\tIf not possible, add a recursion limit to them.";

todo "Add Exit Codes to 'get_element()'.";
todo "Add Array Safety between arguments.";

atom check_if_bigger_than(a: i32, b: i32): i32 {

	pure r: i32 = 0;

	if a > b { r += a; };

	if a < 30 {
		if a != 16 { r += 5; };
		r += 3;
	};

	return load r;
}

extern print_content(content: Array<i8>): i32;

fn main(): i32
{
	var my_first_array: Array<i8> = "Hello World!";

	print_content(my_first_array);

	return 0;
}